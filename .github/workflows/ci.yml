name: MoneyBot CI

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Ensure config directory
        run: mkdir -p config

      - name: Restore .env.ci.test from secret (if missing)
        env:
          ENV_CI_TEST_B64: ${{ secrets.ENV_CI_TEST_B64 }}
        run: |
          if [ ! -f .env.ci.test ] && [ -n "$ENV_CI_TEST_B64" ]; then
            echo "Restoring .env.ci.test from repository secret"
            echo "$ENV_CI_TEST_B64" | base64 -d > .env.ci.test
          fi

      - name: Restore config/ci.test.yml from secret (if missing)
        env:
          CONFIG_CI_TEST_YML_B64: ${{ secrets.CONFIG_CI_TEST_YML_B64 }}
        run: |
          if [ ! -f config/ci.test.yml ] && [ -n "$CONFIG_CI_TEST_YML_B64" ]; then
            echo "Restoring config/ci.test.yml from repository secret"
            echo "$CONFIG_CI_TEST_YML_B64" | base64 -d > config/ci.test.yml
          fi

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-ci.txt ]; then pip install -r requirements-ci.txt; else pip install -r requirements.txt; fi

      - name: Cache data and pytest artifacts
        uses: actions/cache@v4
        with:
          path: |
            data/**
            .pytest_cache
          key: data-${{ runner.os }}-${{ hashFiles('config/ci.test.yml') }}
          restore-keys: |
            data-${{ runner.os }}-

      - name: Run tests with coverage (unit+integration+e2e)
        env:
          MONEYBOT_PRESET: ci.test
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest --cov=src --cov-report=xml --cov-report=term -m "unit or integration or e2e"

      - name: Upload coverage.xml
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
          if-no-files-found: ignore

      - name: Upload pytest cache (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-cache
          path: .pytest_cache
          if-no-files-found: ignore
