# Copyright 2025 unusedusername01
# SPDX-License-Identifier: Apache-2.0

"""Synchronize frontend environment variables with backend configuration."""
from __future__ import annotations

import argparse
from pathlib import Path
from typing import Optional

from src.config.loader import load_config, get as get_config


def _determine_base_url(config: dict[str, object]) -> str:
    configured = get_config(config, "frontend.base_url", None)
    if isinstance(configured, str) and configured.strip():
        return configured.strip().rstrip("/")

    host = get_config(config, "server.host", "127.0.0.1")
    port = get_config(config, "server.port", 8000)
    return f"http://{host}:{port}"


def export_env(preset: Optional[str], output: Path) -> None:
    config = load_config(preset=preset, fail_fast=bool(preset))
    base_url = _determine_base_url(config)

    output.parent.mkdir(parents=True, exist_ok=True)

    lines = [
        "# Generated by scripts/export_frontend_env.py",
        f"VITE_API_BASE_URL={base_url}",
    ]

    output.write_text("\n".join(lines) + "\n", encoding="utf-8")
    print(f"Wrote {output}")


def main() -> None:
    parser = argparse.ArgumentParser(description="Export frontend env file from backend configuration")
    parser.add_argument("--preset", type=str, help="Configuration preset to export (config/<preset>.yml)")
    parser.add_argument(
        "--output",
        type=Path,
        default=Path("src/webapp/.env.development.local"),
        help="Destination .env file"
    )

    args = parser.parse_args()
    export_env(args.preset, args.output)

if __name__ == "__main__":
    main()
